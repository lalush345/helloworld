trigger:
- master

pool:
  name: 'Default'  
  demands:
    - agent.name -equals agentTest 

steps:
- task: SonarQubePrepare@6
  inputs:
    SonarQube: 'sonarqube'
    scannerMode: 'MSBuild'
    projectKey: 'test'
    projectName: 'test'

- task: NuGetCommand@2
  inputs:
    command: 'restore'
    restoreSolution: '**/*.sln'
    feedsToUse: 'select'
    vstsFeed: '2eed1aca-5e9e-41cc-9947-25e256bbcd2c/ca03e69e-8777-409e-a7fa-8619a201930b'
  displayName: 'Restore, Build and Pack .NET Project with NuGet'
  
- task: NuGetCommand@2
  inputs:
    command: 'pack'
    packagesToPack: '**/*.csproj'  # Adjust this if needed to point to your project files
    includeSymbols: true  # Include symbols if needed
    versioningScheme: 'byBuildNumber'  # Optional: Specify versioning scheme
    version: '$(Build.BuildId)'  # Use build ID as version, adjust if needed
  displayName: 'Pack .NET Project with NuGet'
  
- task: SonarQubeAnalyze@6
  inputs:
    jdkversion: 'JAVA_HOME_17_X64'

- script: |
    # Get the current build ID (acting as version number)
    currentVersion=$(Build.BuildId)
    
    # Increment the build ID
    newVersion=$((currentVersion + 1))
    
    # Print the new version to the console
    echo "##vso[task.setvariable variable=version]$newVersion"
    echo "New version is: $newVersion"
    
  displayName: 'Increment and Print Version'

- task: NuGetCommand@2
  inputs:
    command: 'pack'
    packagesToPack: '**/*.csproj'  # Adjust this if needed to point to your project files
    includeSymbols: true  # Include symbols if needed
    versioningScheme: 'byBuildNumber'  # Optional: Specify versioning scheme
    version: '$(Build.BuildId)'  # Use build ID as version, adjust if needed
  displayName: 'Pack .NET Project with NuGet'


