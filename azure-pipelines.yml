trigger:
- master

pool:
  name: 'Default'  
  demands:
    - agent.name -equals agentTest 

steps:
- task: SonarQubePrepare@6
  inputs:
    SonarQube: 'sonarqube'
    scannerMode: 'MSBuild'
    projectKey: 'test'
    projectName: 'test'

- task: NuGetCommand@2
  inputs:
    command: 'restore'
    restoreSolution: '**/*.sln'
    feedsToUse: 'select'
    vstsFeed: '2eed1aca-5e9e-41cc-9947-25e256bbcd2c/ca03e69e-8777-409e-a7fa-8619a201930b'
  displayName: 'Restore .NET Project with NuGet'

- script: java -version
  displayName: 'Check Java Version'

- script: |
    # Format the version number as X.Y.Z where X=1, Y=0, Z=BuildId
    versionNumber="1.0.$(Build.BuildId)"
    
    # Set the version as a pipeline variable
    echo "##vso[task.setvariable variable=packageVersion]$versionNumber"
    
    # Print the version to the console
    echo "Version number is: $versionNumber"
  displayName: 'Set Version Number'

- task: NuGetCommand@2
  inputs:
    command: 'pack'
    packagesToPack: '**/*.csproj'  # Adjust this if needed to point to your project files
    includeSymbols: true  # Include symbols if needed
    version: '$(packageVersion)'  # Use formatted version from the previous step
  displayName: 'Pack .NET Project with NuGet'

- task: SonarQubeAnalyze@6
  inputs:
    jdkversion: 'JAVA_HOME_17_X64'

- script: |
    # This step may be unnecessary if you're already using the version set above.
    # However, if you need to perform additional logic, keep it or modify as needed.
    echo "Current build ID is: $(Build.BuildId)"
    
  displayName: 'Print Build ID'

- task: NuGetCommand@2
  inputs:
    command: 'push'
    packagesToPush: '**/*.nupkg'  # Adjust this if needed to match your output package
    nuGetFeedType: 'internal'
    vstsFeed: '2eed1aca-5e9e-41cc-9947-25e256bbcd2c/ca03e69e-8777-409e-a7fa-8619a201930b'
  displayName: 'Push NuGet Package to Azure Artifacts'
